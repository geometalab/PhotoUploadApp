name: projects
description: App for finding nearby wikimedia commons locations and uploading pictures from your smartphone.
repository: https://github.com/geometalab/PhotoUploadApp

# The following line prevents the package from being accidentally published to
# pub.dev using `pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

version: 1.0.2+2

environment:
  sdk: ">=2.14.0 <3.0.0"

dependencies:
  flutter:
    sdk: flutter
  http: ^0.13.4                         # make get and post requests
  url_launcher: ^6.0.12                 # for opening browser with links
  data_connection_checker: ^0.3.4       # for detecting when connection is lost and displaying no connection page
  image_picker: ^0.8.3                  # opening gallery/camera for uploading media
  cupertino_icons: ^1.0.2               # icons
  provider: ^6.0.0                      # providers, e.g. for the ViewSwitcher()
  flutter_typeahead: ^3.2.0             # auto suggestions field for categories
  flutter_branch_sdk: ^5.0.0            # detecting reroutes to app through deep_links:
  uni_links: ^0.5.1                     # package is for supporting deeplinking, idk if its used but i really dont want to break deeplinking again :)
  shared_preferences: any               # store settings keys locally
  flutter_map: ^0.14.0                  # map for nearby categories
  xml: ^5.1.2                           # the sparql nearby categories query returns as xml, which we need to read
  flutter_map_location_marker: any      # displaying user position on map
  geolocator: ^8.2.0                    # for putting start view on map on current location
  flutter_map_marker_cluster: ^0.4.0    # clusters categories together to maintain pleasant visuals on the map
  crypto: ^3.0.1                        # due to wikimedia file structure, we need to hash the image name to get the path to the image. Also used for PKCE Code Challenge
  easy_dynamic_theme: ^2.2.0            # for easily managing dark/light/system mode
  photo_view: ^0.13.0                   # for all fullscreen photo views
  button_navigation_bar: ^0.1.1         # simple mode: upload to this category when viewing a category
  flutter_dotenv: ^5.0.2                # for reading the .env file
  progress_tab_bar: ^0.1.3              # normal mode: upload flow
  intl: ^0.17.0                         # for using the DateFormat() class
  webfeed: any                          # read Feed for Picture of the Day
  exif: ^3.0.1                          # get exif data from images, for example date of capture
  receive_sharing_intent: ^1.4.5        # get "Open with commons uploader" intents from gallery
  flutter_email_sender: ^5.0.2          # in about section, for contacting developers
  liquid_swipe: ^2.1.1                  # introduction screen transitions
  dots_indicator: ^2.0.0                # introduction screen dot indicators
  flutter_custom_clippers: ^2.0.0       # introduction screen graphics
  google_fonts: ^2.3.1                   # easier testing of fonts, e.g. in introduction view
  cached_network_image: ^3.2.0          # caches images for the category views in map
  package_info_plus: ^1.3.0             # getting version and build number from pubspec file to display
  carousel_slider: ^4.0.0               # for displaying images when in a batch upload
  connectivity_plus: ^2.2.1             # detect changes in network connection status for offline message
  flutter_html: ^2.2.1                  # for displaying POTD desc from the RSS Feed
  catcher: ^0.6.9                       # notifying users of errors and allowing them to send reports
  sentry_flutter: ^6.5.1                # error logging



dev_dependencies:
  flutter_test:
    sdk: flutter
  flutter_launcher_icons: ^0.9.2
  test: ^1.17.12


# Defining the launcher icons for IOS and Android
flutter_icons:
  android: "launcher_icon"
  ios: true
  remove_alpha_ios: true
  image_path: "assets/icon/icon.png"
  image_path_ios: "assets/icon/icon-ios.png"

fonts:
  - family: Titillium Web
    fonts:
      - asset: assets/fonts/Titillium Web/TitilliumWeb-Black.ttf
        weight: 900
      - asset: assets/fonts/Titillium Web/TitilliumWeb-Bold.ttf
        weight: 700
      - asset: assets/fonts/Titillium Web/TitilliumWeb-BoldItalic.ttf
        weight: 700
        style: italic
      - asset: assets/fonts/Titillium Web/TitilliumWeb-ExtraLight.ttf
        weight: 200
      - asset: assets/fonts/Titillium Web/TitilliumWeb-ExtraLightItalic.ttf
        weight: 200
        style: italic
      - asset: assets/fonts/Titillium Web/TitilliumWeb-Italic.ttf
        weight: 400
        style: italic
      - asset: assets/fonts/Titillium Web/TitilliumWeb-Light.ttf
        weight: 300
      - asset: assets/fonts/Titillium Web/TitilliumWeb-LightItalic.ttf
        weight: 300
        style: italic
      - asset: assets/fonts/Titillium Web/TitilliumWeb-Regular.ttf
        weight: 400
      - asset: assets/fonts/Titillium Web/TitilliumWeb-SemiBold.ttf
        weight: 600
      - asset: assets/fonts/Titillium Web/TitilliumWeb-SemiBoldItalic.ttf
        weight: 600
        style: italic
  - family: Black Han Sans
    fonts:
      - asset: assets/fonts/Black Han Sans/BlackHanSans-Regular.ttf

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter.
flutter:
  assets:
    - assets/queries/
    - assets/media/
    - assets/media/logos/
    - assets/media/backgrounds/
    - assets/icon/
    - .env

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  # assets:
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware.

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: assets/fonts/Schyler-Regular.ttf
  #       - asset: assets/fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: assets/fonts/TrajanPro.ttf
  #       - asset: assets/fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-assets/fonts/#from-packages
